# Copyright (c) 2025, Your Company Name. All rights reserved.\n# For license information, please see license.txt\n\nimport frappe\n\ndef verify_implementation():\n    \"\"\"Final verification of the implementation\"\"\"\n    try:\n        print(\"Verifying LMS Course and LMS Lesson implementation...\")\n        \n        # Test 1: Create a course\n        print(\"Test 1: Creating LMS Course...\")\n        course = frappe.get_doc({\n            \"doctype\": \"LMS Course\",\n            \"title\": \"Verification Course\",\n            \"description\": \"Course for verification testing\"\n        })\n        course.insert()\n        print(\"✓ Course created successfully\")\n        \n        # Test 2: Create a lesson\n        print(\"Test 2: Creating LMS Lesson...\")\n        lesson = frappe.get_doc({\n            \"doctype\": \"LMS Lesson\",\n            \"title\": \"Verification Lesson\",\n            \"description\": \"Lesson for verification testing\",\n            \"content_type\": \"Text\",\n            \"content\": \"This is a test lesson content\",\n            \"is_free_preview\": 1\n        })\n        lesson.insert()\n        print(\"✓ Lesson created successfully\")\n        \n        # Test 3: Create a bootcamp with courses and lessons\n        print(\"Test 3: Creating LMS Bootcamp with courses and lessons...\")\n        bootcamp = frappe.get_doc({\n            \"doctype\": \"LMS Bootcamp\",\n            \"title\": \"Verification Bootcamp\",\n            \"description\": \"Bootcamp for verification testing\",\n            \"courses\": [\n                {\n                    \"title\": \"Test Course 1\",\n                    \"description\": \"First test course\",\n                    \"lessons\": [\n                        {\n                            \"title\": \"Text Lesson\",\n                            \"description\": \"A text lesson\",\n                            \"content_type\": \"Text\",\n                            \"content\": \"This is text content\"\n                        },\n                        {\n                            \"title\": \"Video Lesson\",\n                            \"description\": \"A video lesson\",\n                            \"content_type\": \"Video\",\n                            \"video_url\": \"https://example.com/video.mp4\"\n                        },\n                        {\n                            \"title\": \"Free Preview Lesson\",\n                            \"description\": \"A free preview lesson\",\n                            \"content_type\": \"Text\",\n                            \"content\": \"This is free content\",\n                            \"is_free_preview\": 1\n                        }\n                    ]\n                }\n            ]\n        })\n        bootcamp.insert()\n        print(\"✓ Bootcamp with courses and lessons created successfully\")\n        \n        # Test 4: Verify the structure\n        print(\"Test 4: Verifying structure...\")\n        bootcamp.reload()\n        assert len(bootcamp.courses) == 1, \"Bootcamp should have 1 course\"\n        assert len(bootcamp.courses[0].lessons) == 3, \"Course should have 3 lessons\"\n        assert bootcamp.courses[0].lessons[2].is_free_preview == 1, \"Last lesson should be free preview\"\n        print(\"✓ Structure verified successfully\")\n        \n        print(\"\nAll tests passed! Implementation is working correctly.\")\n        return True\n        \n    except Exception as e:\n        print(f\"Error during verification: {e}\")\n        return False\n\nif __name__ == \"__main__\":\n    verify_implementation()